<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on </title>
    <link>/posts/</link>
    <description>Recent content in Posts on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 05 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fishing Planet name change profanity check</title>
      <link>/posts/fishing-planet-name-change-profanity-check/</link>
      <pubDate>Sat, 05 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>/posts/fishing-planet-name-change-profanity-check/</guid>
      <description>If we open GameAssembly.dll in IDA pro after running Link text Here to generate ida_py3.py we can search the list of functions and end up finding a function called AbusiveWords::HasAbusiveWords
Function dissassembly sparing the functions code because we don&amp;rsquo;t care about it char __fastcall HasAbusiveWords(__int64 a1, unsigned __int8 a2, __int64 a3, __int64 a4) { } Abusing it with a single hook Because this check is ran client-side and the server never confirms the name contains no profanity we can just create a signature to the function and hook it, then we just return 0, considering this game lacks an Anti-cheat we can use any hooking library we choose, for this example i went with MinHook</description>
    </item>
    
  </channel>
</rss>
